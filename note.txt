Html file is : template file,
Ts ffile is : class file

::interpolation::
mean ts na data html ma chalavava

type of not check in html,
increment -decrement not allow ex:: a++,b--,
new keywords not allow,


check all comand regarding so type ng help

ng generater ng global module name/innername
ng generater ng global component name
ng generater ng global component name
 ng g  interface dummy
 ng g class dummy
 ng g m user-auth/login class Login
 ng generate component name --inline-style  css file ny bane ts ma inline css thse
 ng generate component name --inline-template html file ny bane ts na template ma thase html
 ng generate component name --inline-template--inline-style only ts file banse

 use if-else use this in html element *ngIf="name else elseBlock" and use for else condition
  <ng-template #elseBlock></ng-template> tag

  Switch case:
  switch maate[ngSwitch]="color" and before 
  case maate *ngSwitchCase = "'red'" use thase ane temathi ky na hoy tyare
  *ngSwitchDefault kay na hoy tyare default ma rakhva

  Forloop:
  for loop mmate component na class ma varialble ma array store karavo ane html ma loop maate element ma *ngFor= "let item of user(user is varialble name) ane element ma item print kravi devani ex: <h1 *ngFor = "let item of user"> {{item}}</h1>

** this example is template refrence varialble  ** 

<input type="text" #task />
<button (click)="addtask(task.value)" >Add Task</button>

** this example is send data child to parent **

<input type="text" [(ngModel)]="name" placeholder="Enter name">
<p>{{name}}</p>

this name get in parent component and data send karva [(ngModel)] no use thy che.


Basic Of typescript *** 

basic types : string, boolean, number, array, object, undefind, null 
aama thi koi types naki na hoy tyre any use krvu,
number string ne object array maa store keva sathe string[]=[] ,string{}={}, avi rite lkhvu 

pipes ** 
data formate change krva ex: uppercase, lowercase text krva etc..

Advance Pipes **
pipes ma main javascript ni method j add karvani hoy pan judi rite..

1. params pipe.
params pipe aetle pipe ni sathe parameter pass karva 
ex: slice method ma slice(1,5) avi rite js ma use krta but ts ma {{data | pipe : parms1 : parms 2 }} aa rite pass thase.

2. multiple pipe.
jevi rite peli pipe muki tena baju ma j biji pipe mukvi ex:{{data | pipe : p1 : p2  | second pipe }}

3. currency pipe.
world na currency no symbol batavva use thy example $ hoy to <p>{{200 | "USD"}}</p>

custom pipe ** 

apdi rite je banavi te pipe custom pipe 
tene maate pela folder k file banavi comand ex: ng c p filename
file banya pa6i main ts vali file nu name html ma jodi devu ane return ma je return krvu hoy te krvu ane arguments pass krva hoy to variable banavi return ma pass kri devo

template driven form ** 

je form ni handleling html(template)side thati hoy tene template driven form kevay
value set, get, error show, validation jeva kaam aa file ma thy 6

forms ni details jova maate (data.value) hoy tevi rite (data.controls) lakhva thi thay jaay


Using this way in index.js in backend ** 

const router = require('./admin/src/routes/User.routes');
app.use(router);
app.use(bodyParser.json({limit:'50mb'}));
app.use(bodyParser.urlencoded({limit:"50mb",extended:true,parameterLimit:5000}))    
app.use(cors);
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

Model **
validation lagadva front end ma je mate validation aek jagyaye define kri ane export kri import pan karavi sakay 
je mate koi file ma export interface name lkhi lkhi devani je property lkvi hoy te